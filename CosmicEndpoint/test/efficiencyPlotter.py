import ROOT as r
import numpy as np

#[0,10,20,30,40,50,75,100,150,200,250,300,400,500,750,1000,1500,3000]
ptBins  = np.array([0.,10.,20.,30.,40.,50.,75.,100.,150.,200.,250.,300.,400.,500.,750.,1000.,1500.,3000.])
etaBins = np.array([-2., -1.6, -0.9, 0., 0.9, 1.6,  2.])
phiBins = np.array([-4., -1.6, 0., 1.6,  4.])

inputfile = r.TFile("craft15_trees/EfficiencyTrees_TuneP.root","r")

inclusivePt  = inputfile.Get("Pt")
passRECOPt   = inputfile.Get("passRECOPt")
passIDPt     = inputfile.Get("passIDPt")
passRECOIDPt = inputfile.Get("passRECOIDPt")

inclusivePt .Sumw2()
passRECOPt  .Sumw2()
passIDPt    .Sumw2()
passRECOIDPt.Sumw2()

inclusivePhi  = inputfile.Get("Phi")
passRECOPhi   = inputfile.Get("passRECOPhi")
passIDPhi     = inputfile.Get("passIDPhi")
passRECOIDPhi = inputfile.Get("passRECOIDPhi")

inclusivePhi .Sumw2()
passRECOPhi  .Sumw2()
passIDPhi    .Sumw2()
passRECOIDPhi.Sumw2()

inclusiveEta  = inputfile.Get("Eta")
passRECOEta   = inputfile.Get("passRECOEta")
passIDEta     = inputfile.Get("passIDEta")
passRECOIDEta = inputfile.Get("passRECOIDEta")

inclusiveEta .Sumw2()
passRECOEta  .Sumw2()
passIDEta    .Sumw2()
passRECOIDEta.Sumw2()

print len(ptBins)

inclusivePt  = inclusivePt.Rebin( len(ptBins)-1,"inclusive", ptBins)
passRECOPt   = passRECOPt.Rebin(  len(ptBins)-1,"passRECO",  ptBins)
passIDPt     = passIDPt.Rebin(    len(ptBins)-1,"passID",    ptBins)
passRECOIDPt = passRECOIDPt.Rebin(len(ptBins)-1,"passRECOID",ptBins)

inclusivePhi  = inclusivePhi.Rebin( len(phiBins)-1,"inclusivePhi", phiBins)
passRECOPhi   = passRECOPhi.Rebin(  len(phiBins)-1,"passRECOPhi",  phiBins)
passIDPhi     = passIDPhi.Rebin(    len(phiBins)-1,"passIDPhi",    phiBins)
passRECOIDPhi = passRECOIDPhi.Rebin(len(phiBins)-1,"passRECOIDPhi",phiBins)

inclusiveEta  = inclusiveEta.Rebin( len(etaBins)-1,"inclusiveEta", etaBins)
passRECOEta   = passRECOEta.Rebin(  len(etaBins)-1,"passRECOEta",  etaBins)
passIDEta     = passIDEta.Rebin(    len(etaBins)-1,"passIDEta",    etaBins)
passRECOIDEta = passRECOIDEta.Rebin(len(etaBins)-1,"passRECOIDEta",etaBins)

outputCan   = r.TCanvas("outcan","Efficiency vs. p_{T}",800,800)
outputCan.cd()
plotPad  = r.TPad("plotPad", "plotPad",0.0,0.3,1.0,1.0)
plotPad.SetFillStyle(4000)
plotPad.SetFrameFillStyle(4000)
plotPad.SetTopMargin(0.025)
plotPad.SetBottomMargin(0.06)
plotPad.SetLeftMargin(0.075)
plotPad.SetRightMargin(0.05)
plotPad.Draw()

outputCan.cd()
ratioPad = r.TPad("ratioPad","ratioPad",0.0,0.0,1.0,0.3)
ratioPad.SetFillStyle(4000)
ratioPad.SetFrameFillStyle(4000)
ratioPad.SetTopMargin(0.03)
ratioPad.SetBottomMargin(0.1)
ratioPad.SetLeftMargin(0.075)
ratioPad.SetRightMargin(0.05)
ratioPad.Draw()

#inclusivePt.Draw()
#raw_input("press enter to continue")
#inclusivePhi.Draw()
#raw_input("press enter to continue")
#inclusiveEta.Draw()
#raw_input("press enter to continue")


#effToRECO   = passRECOPt.Clone("effToRECO"  )
#effToID     = passIDPt.Clone(  "effToID"    )
#effIDToRECO = passRECOIDPt.Clone("effIDToRECO")
#effRECOToID = passRECOIDPt.Clone(  "effRECOToID")

effToRECO   = r.TGraphAsymmErrors(len(ptBins)-1)
effToID     = r.TGraphAsymmErrors(len(ptBins)-1)
effIDToRECO = r.TGraphAsymmErrors(len(ptBins)-1)
effRECOToID = r.TGraphAsymmErrors(len(ptBins)-1)

# pass reco/inclusive
#effToRECO.Divide(effToRECO,inclusivePt,1,1,"B")#histogram divide
effToRECO.Divide(passRECOPt,inclusivePt)
outputCan.cd()
plotPad.cd()
#passRECOPt.SetXTitle("p_{T} [GeV]")
passRECOPt.SetTitleOffset(1.)
passRECOPt.GetXaxis().SetLabelSize(0.04)
passRECOPt.GetXaxis().SetLabelOffset(0.005)
passRECOPt.GetYaxis().SetLabelSize(0.035)
#passRECOPt.SetStats(0)
passRECOPt.SetTitle("#mu pass RECO cuts")
passRECOPt.Draw()
plotPad.SetLogy(1)
ratioPad.cd()
effToRECO.SetTitle("raw to RECO efficiency vs p_{T}")
effToRECO.Draw("A*PX+")
effToRECO.GetXaxis().SetTitle("p_{T} [GeV]")
effToRECO.GetXaxis().SetTitleOffset(-0.75)
effToRECO.GetXaxis().SetTitleSize(0.075)
effToRECO.GetXaxis().SetLabelSize(0.)
effToRECO.GetXaxis().SetRangeUser(0.,3000.)
outputCan.cd()
outputCan.Update()
outputCan.SaveAs("~/public/html/Cosmics/raw_to_reco_eff.png")
raw_input("press enter to continue")
# pass id/inclusive
#effToID.Divide(effToID,inclusivePt,1,1,"B")
effToID.Divide(passIDPt,inclusivePt)
outputCan.cd()
plotPad.cd()
#passIDPt.SetXTitle("p_{T} [GeV]")
passIDPt.SetTitleOffset(1.)
passIDPt.GetXaxis().SetLabelSize(0.04)
passIDPt.GetXaxis().SetLabelOffset(0.005)
passIDPt.GetYaxis().SetLabelSize(0.035)
#passIDPt.SetStats(0)
passIDPt.SetTitle("#mu pass ID cuts")
passIDPt.Draw()
ratioPad.cd()
effToID.SetTitle("raw to ID efficiency vs p_{T}")
effToID.Draw("A*PX+")
effToID.GetXaxis().SetTitle("p_{T} [GeV]")
effToID.GetXaxis().SetTitleOffset(-0.75)
effToID.GetXaxis().SetTitleSize(0.075)
effToID.GetXaxis().SetLabelSize(0.)
effToID.GetXaxis().SetRangeUser(0.,3000.)
outputCan.cd()
outputCan.Update()
outputCan.SaveAs("~/public/html/Cosmics/raw_to_id_eff.png")
raw_input("press enter to continue")
# pass id+reco/pass id
#effIDToRECO.Divide(effIDToRECO,passIDPt,1,1,"B")
effIDToRECO.Divide(passRECOIDPt,passIDPt)
outputCan.cd()
plotPad.cd()
#passRECOIDPt.SetXTitle("p_{T} [GeV]")
passRECOIDPt.SetTitleOffset(1.)
passRECOIDPt.GetXaxis().SetLabelSize(0.04)
passRECOIDPt.GetXaxis().SetLabelOffset(0.005)
passRECOIDPt.GetYaxis().SetLabelSize(0.035)
#passRECOIDPt.SetStats(0)
passRECOIDPt.SetTitle("#mu pass RECO and ID cuts")
passRECOIDPt.Draw()
ratioPad.cd()
effIDToRECO.Draw("A*PX+")
effIDToRECO.SetTitle("ID to ID+RECO efficiency vs p_{T}")
effIDToRECO.GetXaxis().SetTitle("p_{T} [GeV]")
effIDToRECO.GetXaxis().SetTitleOffset(-0.75)
effIDToRECO.GetXaxis().SetTitleSize(0.075)
effIDToRECO.GetXaxis().SetLabelSize(0.)
effIDToRECO.GetXaxis().SetRangeUser(0.,3000.)
outputCan.cd()
outputCan.Update()
outputCan.SaveAs("~/public/html/Cosmics/id_to_idreco_eff.png")
raw_input("press enter to continue")
# pass id+reco/pass reco
#effRECOToID.Divide(effRECOToID,passRECOPt,1,1,"B")
effRECOToID.Divide(passRECOIDPt,passRECOPt)
outputCan.cd()
plotPad.cd()
passRECOIDPt.GetXaxis().SetLabelSize(0.04)
passRECOIDPt.GetXaxis().SetLabelOffset(0.005)
passRECOIDPt.GetYaxis().SetLabelSize(0.035)
#passRECOIDPt.SetStats(0)
passRECOIDPt.SetTitle("#mu pass RECO and ID cuts")
passRECOIDPt.Draw()
ratioPad.cd()
effRECOToID.Draw("A*PX+")
effRECOToID.SetTitle("RECO to ID+RECO efficiency vs p_{T}")
effRECOToID.GetXaxis().SetTitle("p_{T} [GeV]")
effRECOToID.GetXaxis().SetTitleOffset(-0.75)
effRECOToID.GetXaxis().SetTitleSize(0.075)
effRECOToID.GetXaxis().SetLabelSize(0.)
effRECOToID.GetXaxis().SetRangeUser(0.,3000.)
outputCan.cd()
outputCan.Update()
outputCan.SaveAs("~/public/html/Cosmics/reco_to_idreco_eff.png")
raw_input("press enter to exit")

